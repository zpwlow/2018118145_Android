package com.coolcr.taobaocoupon.ui.fragment;

import android.content.Intent;
import android.graphics.Rect;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager.widget.ViewPager;

import com.coolcr.taobaocoupon.R;
import com.coolcr.taobaocoupon.base.BaseFragment;
import com.coolcr.taobaocoupon.model.domain.Categories;
import com.coolcr.taobaocoupon.model.domain.HomePagerContent;
import com.coolcr.taobaocoupon.presenter.ICategoryPagerPresenter;
import com.coolcr.taobaocoupon.presenter.ITicketPresenter;
import com.coolcr.taobaocoupon.ui.activity.TicketActivity;
import com.coolcr.taobaocoupon.ui.adapter.HomePageContentAdapter;
import com.coolcr.taobaocoupon.ui.adapter.LooperPagerAdapter;
import com.coolcr.taobaocoupon.ui.custom.AutoLoopViewPager;
import com.coolcr.taobaocoupon.utils.Constants;
import com.coolcr.taobaocoupon.utils.LogUtils;
import com.coolcr.taobaocoupon.utils.PresenterManger;
import com.coolcr.taobaocoupon.utils.SizeUtils;
import com.coolcr.taobaocoupon.utils.ToastUtil;
import com.coolcr.taobaocoupon.view.ICategoryPagerCallback;
import com.lcodecore.tkrefreshlayout.RefreshListenerAdapter;
import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
import com.lcodecore.tkrefreshlayout.views.TbNestedScrollView;

import java.util.List;

import butterknife.BindView;

public class HomePagerFragment extends BaseFragment implements ICategoryPagerCallback, HomePageContentAdapter.OnListItemClickListener, LooperPagerAdapter.OnLooperPagerItemClickListener {

    private ICategoryPagerPresenter mCategoryPagerPresenter;
    private int mMaterialId;
    private HomePageContentAdapter mContentAdapter;
    private LooperPagerAdapter mLooperPagerAdapter;

    public HomePagerFragment newInstance(Categories.DataBean category) {
        HomePagerFragment homePagerFragment = new HomePagerFragment();
        // Fragment传递数据
        Bundle bundle = new Bundle();
        bundle.putString(Constants.KEY_HOME_PAGER_TITLE, category.getTitle());
        bundle.putInt(Constants.KEY_HOME_PAGER_MATERIAL_ID, category.getId());
        homePagerFragment.setArguments(bundle);
        return homePagerFragment;
    }

    @BindView(R.id.home_pager_content_list)
    RecyclerView mContentList;

    @BindView(R.id.looper_pager)
    AutoLoopViewPager mLooperPager;

    @BindView(R.id.home_pager_title)
    TextView tvCurrentCategoryTitle;

    @BindView(R.id.looper_point_container)
    LinearLayout looperPointContainer;

    @BindView(R.id.home_pager_parent)
    LinearLayout homePagerParent;

    @BindView(R.id.home_pager_header_container)
    LinearLayout homeHeaderContainer;

    @BindView(R.id.home_pager_nested_scroller)
    TbNestedScrollView homePagerNestedView;

    @BindView(R.id.home_pager_refresh)
    TwinklingRefreshLayout mTwinklingRefreshLayout;

    @Override
    protected int getRootViewResId() {
        return R.layout.fragment_home_pager;
    }

    @Override
    public void onResume() {
        super.onResume();
        // 可见的时候调用轮播
        mLooperPager.startLoop();
        LogUtils.d(this, "onResume...");
    }

    @Override
    public void onPause() {
        super.onPause();
        // 不可见的暂停轮播
        mLooperPager.stopLoop();
        LogUtils.d(this, "onPause...");
    }

    @Override
    protected void initView(View rootView) {
        // 设置布局管理器
        mContentList.setLayoutManager(new LinearLayoutManager(getContext()));
        mContentList.addItemDecoration(new RecyclerView.ItemDecoration() {
            @Override
            public void getItemOffsets(@NonNull Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
                outRect.top = 8;
                outRect.bottom = 8;
            }
        });
        // 创建适配器
        mContentAdapter = new HomePageContentAdapter();
        // 设置适配器
        mContentList.setAdapter(mContentAdapter);

        // 创建轮播图适配器
        mLooperPagerAdapter = new LooperPagerAdapter();
        // 设置适配器
        mLooperPager.setAdapter(mLooperPagerAdapter);
        // 设置RefreshLayout相关属性
        mTwinklingRefreshLayout.setEnableRefresh(false);
        mTwinklingRefreshLayout.setEnableLoadmore(true);
    }

    @Override
    protected void initListener() {
        // 列表的点击事件
        mContentAdapter.setOnListItemClickListener(this);
        // 轮播图的点击事件
        mLooperPagerAdapter.setOnLooperPagerItemClickListener(this);
        homePagerParent.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGl